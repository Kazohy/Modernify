import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'maven-publish'
	id 'io.github.juuxel.loom-quiltflower' version '1.7.+'
	id 'net.darkhax.curseforgegradle' version '1.+'
	id "com.modrinth.minotaur" version "2.+"
	id 'org.jetbrains.kotlin.jvm' version '2.1.21'
	id 'fabric-loom' version '1.9.2'
}

base {
	version = project.mod_version
	group = project.maven_group
}

repositories {
	maven {
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}

	// Optional, just to be sure:
	maven {
		name = "Mojang"
		url = "https://libraries.minecraft.net/"
	}

	// Default central
	mavenCentral()

	maven {
		name = "JetBrains"
		url = "https://maven.pkg.jetbrains.space/public/p/kotlinx/maven"
	}

	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases"
	} // Mod Menu
	maven { url = "https://maven.shedaniel.me/" } // Cloth Config
	maven {
		url = "https://api.modrinth.com/maven"
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modImplementation "ar.com.hjg:pngj:2.1.0"

	// Kotlin dependencies
	implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.22"
}


processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

kotlin {
	jvmToolchain(21)
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions.jvmTarget = "21"
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}